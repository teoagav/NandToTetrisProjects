
// begin class

// begin class var dec
// end class var dec


// begin class var dec
// end class var dec


// begin class var dec
// end class var dec


// begin class var dec
// end class var dec


// begin class var dec
// end class var dec


// begin class var dec
// end class var dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0

// begin subroutine body

// begin statements

// begin let

// begin expression

// begin term identifier Ax
push argument 0
// end term

// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier Ay
push argument 1
// end term

// end expression

push pointer 0
push constant 1
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier AleftWall
push argument 2
// end term

// end expression

push pointer 0
push constant 10
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier ArightWall
push argument 3
// end term


// begin term integerConstant 6
push constant 6
// end term

sub
// end expression

push pointer 0
push constant 11
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier AtopWall
push argument 4
// end term

// end expression

push pointer 0
push constant 12
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier AbottomWall
push argument 5
// end term


// begin term integerConstant 6
push constant 6
// end term

sub
// end expression

push pointer 0
push constant 13
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term integerConstant 0
push constant 0
// end term

// end expression

push pointer 0
push constant 14
add
pop pointer 1
pop that 0
// end let


// begin do
push pointer 0

// begin expression list
// end expression list

call Ball.show 1
pop temp 0
// end do


// begin return

// begin expression

// begin term keyword this
push pointer 0
// end term

// end expression

return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.dispose 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do

// begin expression list

// begin expression

// begin term keyword this
push pointer 0
// end term

// end expression

// end expression list

call Memory.deAlloc 1
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.show 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do

// begin expression list

// begin expression

// begin term keyword true
push constant 1
neg
// end term

// end expression

// end expression list

call Screen.setColor 1
pop temp 0
// end do


// begin do
push pointer 0

// begin expression list
// end expression list

call Ball.draw 1
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.hide 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do

// begin expression list

// begin expression

// begin term keyword false
push constant 0
// end term

// end expression

// end expression list

call Screen.setColor 1
pop temp 0
// end do


// begin do
push pointer 0

// begin expression list
// end expression list

call Ball.draw 1
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.draw 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do

// begin expression list

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 5
push constant 5
// end term

add
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 5
push constant 5
// end term

add
// end expression

// end expression list

call Screen.drawRectangle 4
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.getLeft 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin return

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term

// end expression

return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.getRight 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin return

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 5
push constant 5
// end term

add
// end expression

return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.setDestination 3
push argument 0
pop pointer 0

// begin subroutine body

// begin var dec
// end var dec


// begin statements

// begin let

// begin expression

// begin term identifier destx
push argument 1
// end term


// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term

sub
// end expression

push pointer 0
push constant 2
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier desty
push argument 2
// end term


// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term

sub
// end expression

push pointer 0
push constant 3
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier Math

// begin expression list

// begin expression

// begin term identifier lengthx
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

// end expression

// end expression list

call Math.abs 1
// end term

// end expression

pop local 0
// end let


// begin let

// begin expression

// begin term identifier Math

// begin expression list

// begin expression

// begin term identifier lengthy
push pointer 0
push constant 3
add
pop pointer 1
push that 0
// end term

// end expression

// end expression list

call Math.abs 1
// end term

// end expression

pop local 1
// end let


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier dx
push local 0
// end term


// begin term identifier dy
push local 1
// end term

lt
// end expression

// end term

// end expression

push pointer 0
push constant 7
add
pop pointer 1
pop that 0
// end let


// begin if

// begin expression

// begin term identifier invert
push pointer 0
push constant 7
add
pop pointer 1
push that 0
// end term

// end expression

not
if-goto endif_0

// begin statements

// begin let

// begin expression

// begin term identifier dx
push local 0
// end term

// end expression

pop local 2
// end let


// begin let

// begin expression

// begin term identifier dy
push local 1
// end term

// end expression

pop local 0
// end let


// begin let

// begin expression

// begin term identifier temp
push local 2
// end term

// end expression

pop local 1
// end let


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier desty
push argument 2
// end term

lt
// end expression

// end term

// end expression

push pointer 0
push constant 8
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier destx
push argument 1
// end term

lt
// end expression

// end term

// end expression

push pointer 0
push constant 9
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_0
label endif_0

// begin statements

// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier destx
push argument 1
// end term

lt
// end expression

// end term

// end expression

push pointer 0
push constant 8
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier desty
push argument 2
// end term

lt
// end expression

// end term

// end expression

push pointer 0
push constant 9
add
pop pointer 1
pop that 0
// end let

// end statements

label endelse_0
// end if


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term integerConstant 2
push constant 2
// end term


// begin term identifier dy
push local 1
// end term

call Math.multiply 2
// end expression

// end term


// begin term identifier dx
push local 0
// end term

sub
// end expression

push pointer 0
push constant 4
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term integerConstant 2
push constant 2
// end term


// begin term identifier dy
push local 1
// end term

call Math.multiply 2
// end expression

push pointer 0
push constant 5
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term integerConstant 2
push constant 2
// end term


// begin term symbol (

// begin expression

// begin term identifier dy
push local 1
// end term


// begin term identifier dx
push local 0
// end term

sub
// end expression

// end term

call Math.multiply 2
// end expression

push pointer 0
push constant 6
add
pop pointer 1
pop that 0
// end let


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.move 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do
push pointer 0

// begin expression list
// end expression list

call Ball.hide 1
pop temp 0
// end do


// begin if

// begin expression

// begin term identifier d
push pointer 0
push constant 4
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 0
push constant 0
// end term

lt
// end expression

not
if-goto endif_1

// begin statements

// begin let

// begin expression

// begin term identifier d
push pointer 0
push constant 4
add
pop pointer 1
push that 0
// end term


// begin term identifier straightD
push pointer 0
push constant 5
add
pop pointer 1
push that 0
// end term

add
// end expression

push pointer 0
push constant 4
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_1
label endif_1

// begin statements

// begin let

// begin expression

// begin term identifier d
push pointer 0
push constant 4
add
pop pointer 1
push that 0
// end term


// begin term identifier diagonalD
push pointer 0
push constant 6
add
pop pointer 1
push that 0
// end term

add
// end expression

push pointer 0
push constant 4
add
pop pointer 1
pop that 0
// end let


// begin if

// begin expression

// begin term identifier positivey
push pointer 0
push constant 9
add
pop pointer 1
push that 0
// end term

// end expression

not
if-goto endif_2

// begin statements

// begin if

// begin expression

// begin term identifier invert
push pointer 0
push constant 7
add
pop pointer 1
push that 0
// end term

// end expression

not
if-goto endif_3

// begin statements

// begin let

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

add
// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_3
label endif_3

// begin statements

// begin let

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

add
// end expression

push pointer 0
push constant 1
add
pop pointer 1
pop that 0
// end let

// end statements

label endelse_3
// end if

// end statements

goto endelse_2
label endif_2

// begin statements

// begin if

// begin expression

// begin term identifier invert
push pointer 0
push constant 7
add
pop pointer 1
push that 0
// end term

// end expression

not
if-goto endif_4

// begin statements

// begin let

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

sub
// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_4
label endif_4

// begin statements

// begin let

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

sub
// end expression

push pointer 0
push constant 1
add
pop pointer 1
pop that 0
// end let

// end statements

label endelse_4
// end if

// end statements

label endelse_2
// end if

// end statements

label endelse_1
// end if


// begin if

// begin expression

// begin term identifier positivex
push pointer 0
push constant 8
add
pop pointer 1
push that 0
// end term

// end expression

not
if-goto endif_5

// begin statements

// begin if

// begin expression

// begin term identifier invert
push pointer 0
push constant 7
add
pop pointer 1
push that 0
// end term

// end expression

not
if-goto endif_6

// begin statements

// begin let

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

add
// end expression

push pointer 0
push constant 1
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_6
label endif_6

// begin statements

// begin let

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

add
// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let

// end statements

label endelse_6
// end if

// end statements

goto endelse_5
label endif_5

// begin statements

// begin if

// begin expression

// begin term identifier invert
push pointer 0
push constant 7
add
pop pointer 1
push that 0
// end term

// end expression

not
if-goto endif_7

// begin statements

// begin let

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

sub
// end expression

push pointer 0
push constant 1
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_7
label endif_7

// begin statements

// begin let

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

sub
// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let

// end statements

label endelse_7
// end if

// end statements

label endelse_5
// end if


// begin if

// begin expression

// begin term symbol ~

// begin term symbol (

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier leftWall
push pointer 0
push constant 10
add
pop pointer 1
push that 0
// end term

gt
// end expression

// end term

not
// end term

// end expression

not
if-goto endif_8

// begin statements

// begin let

// begin expression

// begin term integerConstant 1
push constant 1
// end term

// end expression

push pointer 0
push constant 14
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier leftWall
push pointer 0
push constant 10
add
pop pointer 1
push that 0
// end term

// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_8
label endif_8
label endelse_8
// end if


// begin if

// begin expression

// begin term symbol ~

// begin term symbol (

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier rightWall
push pointer 0
push constant 11
add
pop pointer 1
push that 0
// end term

lt
// end expression

// end term

not
// end term

// end expression

not
if-goto endif_9

// begin statements

// begin let

// begin expression

// begin term integerConstant 2
push constant 2
// end term

// end expression

push pointer 0
push constant 14
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier rightWall
push pointer 0
push constant 11
add
pop pointer 1
push that 0
// end term

// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_9
label endif_9
label endelse_9
// end if


// begin if

// begin expression

// begin term symbol ~

// begin term symbol (

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier topWall
push pointer 0
push constant 12
add
pop pointer 1
push that 0
// end term

gt
// end expression

// end term

not
// end term

// end expression

not
if-goto endif_10

// begin statements

// begin let

// begin expression

// begin term integerConstant 3
push constant 3
// end term

// end expression

push pointer 0
push constant 14
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier topWall
push pointer 0
push constant 12
add
pop pointer 1
push that 0
// end term

// end expression

push pointer 0
push constant 1
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_10
label endif_10
label endelse_10
// end if


// begin if

// begin expression

// begin term symbol ~

// begin term symbol (

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier bottomWall
push pointer 0
push constant 13
add
pop pointer 1
push that 0
// end term

lt
// end expression

// end term

not
// end term

// end expression

not
if-goto endif_11

// begin statements

// begin let

// begin expression

// begin term integerConstant 4
push constant 4
// end term

// end expression

push pointer 0
push constant 14
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier bottomWall
push pointer 0
push constant 13
add
pop pointer 1
push that 0
// end term

// end expression

push pointer 0
push constant 1
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_11
label endif_11
label endelse_11
// end if


// begin do
push pointer 0

// begin expression list
// end expression list

call Ball.show 1
pop temp 0
// end do


// begin return

// begin expression

// begin term identifier wall
push pointer 0
push constant 14
add
pop pointer 1
push that 0
// end term

// end expression

return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Ball.bounce 5
push argument 0
pop pointer 0

// begin subroutine body

// begin var dec
// end var dec


// begin statements

// begin let

// begin expression

// begin term identifier lengthx
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 10
push constant 10
// end term

call Math.divide 2
// end expression

pop local 2
// end let


// begin let

// begin expression

// begin term identifier lengthy
push pointer 0
push constant 3
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 10
push constant 10
// end term

call Math.divide 2
// end expression

pop local 3
// end let


// begin if

// begin expression

// begin term identifier bouncingDirection
push argument 1
// end term


// begin term integerConstant 0
push constant 0
// end term

eq
// end expression

not
if-goto endif_12

// begin statements

// begin let

// begin expression

// begin term integerConstant 10
push constant 10
// end term

// end expression

pop local 4
// end let

// end statements

goto endelse_12
label endif_12

// begin statements

// begin if

// begin expression

// begin term symbol (

// begin expression

// begin term symbol (

// begin expression

// begin term symbol ~

// begin term symbol (

// begin expression

// begin term identifier lengthx
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 0
push constant 0
// end term

lt
// end expression

// end term

not
// end term

// end expression

// end term


// begin term symbol (

// begin expression

// begin term identifier bouncingDirection
push argument 1
// end term


// begin term integerConstant 1
push constant 1
// end term

eq
// end expression

// end term

and
// end expression

// end term


// begin term symbol (

// begin expression

// begin term symbol (

// begin expression

// begin term identifier lengthx
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 0
push constant 0
// end term

lt
// end expression

// end term


// begin term symbol (

// begin expression

// begin term identifier bouncingDirection
push argument 1
// end term


// begin term symbol (

// begin expression

// begin term symbol -

// begin term integerConstant 1
push constant 1
// end term

neg
// end term

// end expression

// end term

eq
// end expression

// end term

and
// end expression

// end term

or
// end expression

not
if-goto endif_13

// begin statements

// begin let

// begin expression

// begin term integerConstant 20
push constant 20
// end term

// end expression

pop local 4
// end let

// end statements

goto endelse_13
label endif_13

// begin statements

// begin let

// begin expression

// begin term integerConstant 5
push constant 5
// end term

// end expression

pop local 4
// end let

// end statements

label endelse_13
// end if

// end statements

label endelse_12
// end if


// begin if

// begin expression

// begin term identifier wall
push pointer 0
push constant 14
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 1
push constant 1
// end term

eq
// end expression

not
if-goto endif_14

// begin statements

// begin let

// begin expression

// begin term integerConstant 506
push constant 506
// end term

// end expression

pop local 0
// end let


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier divLengthy
push local 3
// end term


// begin term symbol (

// begin expression

// begin term symbol -

// begin term integerConstant 50
push constant 50
// end term

neg
// end term

// end expression

// end term

call Math.multiply 2
// end expression

// end term


// begin term identifier divLengthx
push local 2
// end term

call Math.divide 2
// end expression

pop local 1
// end let


// begin let

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term symbol (

// begin expression

// begin term identifier newy
push local 1
// end term


// begin term identifier factor
push local 4
// end term

call Math.multiply 2
// end expression

// end term

add
// end expression

pop local 1
// end let

// end statements

goto endelse_14
label endif_14

// begin statements

// begin if

// begin expression

// begin term identifier wall
push pointer 0
push constant 14
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 2
push constant 2
// end term

eq
// end expression

not
if-goto endif_15

// begin statements

// begin let

// begin expression

// begin term integerConstant 0
push constant 0
// end term

// end expression

pop local 0
// end let


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier divLengthy
push local 3
// end term


// begin term integerConstant 50
push constant 50
// end term

call Math.multiply 2
// end expression

// end term


// begin term identifier divLengthx
push local 2
// end term

call Math.divide 2
// end expression

pop local 1
// end let


// begin let

// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term symbol (

// begin expression

// begin term identifier newy
push local 1
// end term


// begin term identifier factor
push local 4
// end term

call Math.multiply 2
// end expression

// end term

add
// end expression

pop local 1
// end let

// end statements

goto endelse_15
label endif_15

// begin statements

// begin if

// begin expression

// begin term identifier wall
push pointer 0
push constant 14
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 3
push constant 3
// end term

eq
// end expression

not
if-goto endif_16

// begin statements

// begin let

// begin expression

// begin term integerConstant 250
push constant 250
// end term

// end expression

pop local 1
// end let


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier divLengthx
push local 2
// end term


// begin term symbol (

// begin expression

// begin term symbol -

// begin term integerConstant 25
push constant 25
// end term

neg
// end term

// end expression

// end term

call Math.multiply 2
// end expression

// end term


// begin term identifier divLengthy
push local 3
// end term

call Math.divide 2
// end expression

pop local 0
// end let


// begin let

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term symbol (

// begin expression

// begin term identifier newx
push local 0
// end term


// begin term identifier factor
push local 4
// end term

call Math.multiply 2
// end expression

// end term

add
// end expression

pop local 0
// end let

// end statements

goto endelse_16
label endif_16

// begin statements

// begin let

// begin expression

// begin term integerConstant 0
push constant 0
// end term

// end expression

pop local 1
// end let


// begin let

// begin expression

// begin term symbol (

// begin expression

// begin term identifier divLengthx
push local 2
// end term


// begin term integerConstant 25
push constant 25
// end term

call Math.multiply 2
// end expression

// end term


// begin term identifier divLengthy
push local 3
// end term

call Math.divide 2
// end expression

pop local 0
// end let


// begin let

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term symbol (

// begin expression

// begin term identifier newx
push local 0
// end term


// begin term identifier factor
push local 4
// end term

call Math.multiply 2
// end expression

// end term

add
// end expression

pop local 0
// end let

// end statements

label endelse_16
// end if

// end statements

label endelse_15
// end if

// end statements

label endelse_14
// end if


// begin do
push pointer 0

// begin expression list

// begin expression

// begin term identifier newx
push local 0
// end term

// end expression


// begin expression

// begin term identifier newy
push local 1
// end term

// end expression

// end expression list

call Ball.setDestination 3
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec

// end class

