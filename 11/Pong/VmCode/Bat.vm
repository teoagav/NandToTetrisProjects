
// begin class

// begin class var dec
// end class var dec


// begin class var dec
// end class var dec


// begin class var dec
// end class var dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.new 0
push constant 5
call Memory.alloc 1
pop pointer 0

// begin subroutine body

// begin statements

// begin let

// begin expression

// begin term identifier Ax
push argument 0
// end term

// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier Ay
push argument 1
// end term

// end expression

push pointer 0
push constant 1
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier Awidth
push argument 2
// end term

// end expression

push pointer 0
push constant 2
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term identifier Aheight
push argument 3
// end term

// end expression

push pointer 0
push constant 3
add
pop pointer 1
pop that 0
// end let


// begin let

// begin expression

// begin term integerConstant 2
push constant 2
// end term

// end expression

push pointer 0
push constant 4
add
pop pointer 1
pop that 0
// end let


// begin do
push pointer 0

// begin expression list
// end expression list

call Bat.show 1
pop temp 0
// end do


// begin return

// begin expression

// begin term keyword this
push pointer 0
// end term

// end expression

return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.dispose 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do

// begin expression list

// begin expression

// begin term keyword this
push pointer 0
// end term

// end expression

// end expression list

call Memory.deAlloc 1
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.show 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do

// begin expression list

// begin expression

// begin term keyword true
push constant 1
neg
// end term

// end expression

// end expression list

call Screen.setColor 1
pop temp 0
// end do


// begin do
push pointer 0

// begin expression list
// end expression list

call Bat.draw 1
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.hide 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do

// begin expression list

// begin expression

// begin term keyword false
push constant 0
// end term

// end expression

// end expression list

call Screen.setColor 1
pop temp 0
// end do


// begin do
push pointer 0

// begin expression list
// end expression list

call Bat.draw 1
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.draw 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do

// begin expression list

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier width
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

add
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier height
push pointer 0
push constant 3
add
pop pointer 1
push that 0
// end term

add
// end expression

// end expression list

call Screen.drawRectangle 4
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.setDirection 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin let

// begin expression

// begin term identifier Adirection
push argument 1
// end term

// end expression

push pointer 0
push constant 4
add
pop pointer 1
pop that 0
// end let


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.getLeft 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin return

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term

// end expression

return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.getRight 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin return

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier width
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

add
// end expression

return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.setWidth 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin do
push pointer 0

// begin expression list
// end expression list

call Bat.hide 1
pop temp 0
// end do


// begin let

// begin expression

// begin term identifier Awidth
push argument 1
// end term

// end expression

push pointer 0
push constant 2
add
pop pointer 1
pop that 0
// end let


// begin do
push pointer 0

// begin expression list
// end expression list

call Bat.show 1
pop temp 0
// end do


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec


// begin subroutine dec

// begin parameter list
// end parameter list

function Bat.move 0
push argument 0
pop pointer 0

// begin subroutine body

// begin statements

// begin if

// begin expression

// begin term identifier direction
push pointer 0
push constant 4
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 1
push constant 1
// end term

eq
// end expression

not
if-goto endif_17

// begin statements

// begin let

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

sub
// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let


// begin if

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 0
push constant 0
// end term

lt
// end expression

not
if-goto endif_18

// begin statements

// begin let

// begin expression

// begin term integerConstant 0
push constant 0
// end term

// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_18
label endif_18
label endelse_18
// end if


// begin do

// begin expression list

// begin expression

// begin term keyword false
push constant 0
// end term

// end expression

// end expression list

call Screen.setColor 1
pop temp 0
// end do


// begin do

// begin expression list

// begin expression

// begin term symbol (

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier width
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

add
// end expression

// end term


// begin term integerConstant 1
push constant 1
// end term

add
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term symbol (

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier width
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

add
// end expression

// end term


// begin term integerConstant 4
push constant 4
// end term

add
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier height
push pointer 0
push constant 3
add
pop pointer 1
push that 0
// end term

add
// end expression

// end expression list

call Screen.drawRectangle 4
pop temp 0
// end do


// begin do

// begin expression list

// begin expression

// begin term keyword true
push constant 1
neg
// end term

// end expression

// end expression list

call Screen.setColor 1
pop temp 0
// end do


// begin do

// begin expression list

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 3
push constant 3
// end term

add
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier height
push pointer 0
push constant 3
add
pop pointer 1
push that 0
// end term

add
// end expression

// end expression list

call Screen.drawRectangle 4
pop temp 0
// end do

// end statements

goto endelse_17
label endif_17

// begin statements

// begin let

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

add
// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let


// begin if

// begin expression

// begin term symbol (

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier width
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

add
// end expression

// end term


// begin term integerConstant 511
push constant 511
// end term

gt
// end expression

not
if-goto endif_19

// begin statements

// begin let

// begin expression

// begin term integerConstant 511
push constant 511
// end term


// begin term identifier width
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

sub
// end expression

push pointer 0
push constant 0
add
pop pointer 1
pop that 0
// end let

// end statements

goto endelse_19
label endif_19
label endelse_19
// end if


// begin do

// begin expression list

// begin expression

// begin term keyword false
push constant 0
// end term

// end expression

// end expression list

call Screen.setColor 1
pop temp 0
// end do


// begin do

// begin expression list

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 4
push constant 4
// end term

sub
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term integerConstant 1
push constant 1
// end term

sub
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier height
push pointer 0
push constant 3
add
pop pointer 1
push that 0
// end term

add
// end expression

// end expression list

call Screen.drawRectangle 4
pop temp 0
// end do


// begin do

// begin expression list

// begin expression

// begin term keyword true
push constant 1
neg
// end term

// end expression

// end expression list

call Screen.setColor 1
pop temp 0
// end do


// begin do

// begin expression list

// begin expression

// begin term symbol (

// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier width
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

add
// end expression

// end term


// begin term integerConstant 3
push constant 3
// end term

sub
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term

// end expression


// begin expression

// begin term identifier x
push pointer 0
push constant 0
add
pop pointer 1
push that 0
// end term


// begin term identifier width
push pointer 0
push constant 2
add
pop pointer 1
push that 0
// end term

add
// end expression


// begin expression

// begin term identifier y
push pointer 0
push constant 1
add
pop pointer 1
push that 0
// end term


// begin term identifier height
push pointer 0
push constant 3
add
pop pointer 1
push that 0
// end term

add
// end expression

// end expression list

call Screen.drawRectangle 4
pop temp 0
// end do

// end statements

label endelse_17
// end if


// begin return
push constant 0
return
// end return

// end statements

// end subroutine body

// end subroutine dec

// end class

